{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/bragi-browser/lib/bragi.js","node_modules/bragi-browser/lib/bragi/canLog.js","node_modules/bragi-browser/lib/bragi/symbols.js","node_modules/bragi-browser/lib/bragi/transports.js","node_modules/bragi-browser/lib/bragi/transports/Console.js","node_modules/bragi-browser/lib/bragi/transports/History.js","node_modules/bragi-browser/lib/bragi/transports/Transports.js","node_modules/bragi-browser/lib/bragi/transports/index.js","node_modules/inherits/inherits_browser.js","node_modules/process/browser.js","node_modules/util/support/isBufferBrowser.js","node_modules/util/util.js","public/core/melo/dispositive/despktopCn.ts","public/core/melo/dispositive/dispositive.ts","public/core/melo/dispositive/graphs.ts","public/melo.ts"],"names":[],"mappingspFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdvRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3FA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;aCrkB+B,AAAW;;;AAUtC,yBACI,AAAO,AAAC,AACZ;;;;KAAC,AAEM,AAAK;;;;8BAAC,SAAsB,EAAE,OAA0B,EAAE,GAAQ,EACrE,AAAgC;;;;AAChC,gBAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC1B,gBAAI,CAAC,YAAY,EAAE,CAAC;AAEpB,gBAAI,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,wBAAwB,CAAC;;AAAC,AAClF,AAAa,AACb,gBAAI,CAAC,OAAO,CAAC,SAAS,GAAG,aAAG;uBAAI,AAAI,OAAC,SAAS,CAAC,GAAG;aAAC,CAAC;AACpD,oBAAQ,CAAC,WAAW,GAAG,aAAG;uBAAI,AAAI,OAAC,WAAW,CAAC,GAAG;aAAC;;AAAC,AACpD,AAAqB,AACrB,gBAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACf,gBAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAEf,gBAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;AACjC,gBAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC;AAEhC,gBAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAClB,gBAAI,CAAC,SAAS,GAAG,SAAS,CAAC,AAC/B;SAAC,AAED,AAAY,AACL,AAAS;;;;;kCAAC,GAAG;AAChB,oBAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,AAChC;SAAC,AAEM,AAAW;;;oCAAC,GAAG,EAClB,AAAiC;;AACjC,gBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AACjC,gBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AACjC,gBAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACf,gBAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,AACnB;SAAC,AAED,AAAa,AACH,AAAQ;;;;;iCAAC,OAAoB,EAAE,GAAG,EACxC,AAEE;;;;AACF,gBAAI,OAAO,GAAW,AAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,AAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;AAChE,gBAAI,OAAO,GAAW,AAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,AAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;AAEjE,mBAAO,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,GAAG,IAAI,CAAC;AACnC,mBAAO,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,AACxC;SAAC,AAEO,AAAQ;;;iCAAC,OAAoB,EAAE,GAAU;AAC7C,gBAAI,EAAE,GAAG,OAAO,CAAC,SAAS;gBACtB,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,AAChC;SAAC,AACL,AAAC;;;;eAjEO,WAAW,AAAe,AAAM,AAAe,AAEvD;;;;;;;;;;;;;;ICJY,KAAK,AAAM,AAAe,AAC/B;;;;;;;;;;;;gBAIP,AAAC,AAED;;;;eAAiC,AAAQ;;;AAErC,2BACI,AAAO,AAAC,AACZ;;;;KAAC,AACD,AAAK;;;;8BAAC,KAAK,EAAE,OAAO;AAChB,iBAAK,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAC1B,kBAAM,KAAK,CAAC,OAAO,CAAC,CAAC,AACzB;SAAC,AACL,AAAC;;;;UAfO,QAAQ,AAAC,AAAM,AAAU,AAEjC;;;;;;;;;;;;;;ICHY,KAAK,AAAM,AAAe,AAqBtC;;;;;;;AA2BI,wBACA;;KAAC,AAEM,AAAW;;;;oCAAC,OAA0B,EACzC,AAEE;gBAHyC,SAAS,yDAAW,EAAE;;;;;AAIjE,gBAAI,CAAC,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACvC,gBAAI,CAAC,EAAE,GAAG,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC;AAC9B,gBAAI,CAAC,EAAE,GAAG,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC;AAC/B,gBAAI,CAAC,MAAM,GAAG;AACV,iBAAC,EAAE,SAAS,CAAC,CAAC,AAAI,IAAC,IAAI,CAAC,EAAE,GAAG,CAAC,AAAC;AAC/B,iBAAC,EAAE,SAAS,CAAC,CAAC,AAAI,IAAC,IAAI,CAAC,EAAE,GAAG,CAAC,AAAC;AAC/B,sBAAM,EAAE,SAAS,CAAC,MAAM,IAAI,EAAE;AAC9B,qBAAK,EAAE,SAAS,CAAC,KAAK,IAAI,EAAE;AAC5B,wBAAQ,EAAE,SAAS,CAAC,QAAQ,IAAI,CAAC;AACjC,0BAAU,EAAE,SAAS,CAAC,UAAU,IAAI,GAAG;AACvC,wBAAQ,EAAE,SAAS,CAAC,QAAQ,IAAI,EAAE;AAClC,mBAAG,EAAE,SAAS,CAAC,GAAG,IAAI,GAAG;AACzB,yBAAS,EAAE,SAAS,CAAC,SAAS,IAAI,EAAE;AACpC,oBAAI,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC;AACzB,yBAAS,EAAE,SAAS,CAAC,SAAS,IAAI,KAAK;AACvC,sBAAM,EAAE,SAAS,CAAC,MAAM,IAAI,KAAK;AACjC,wBAAQ,EAAE,SAAS,CAAC,QAAQ,IAAI,KAAK;aACxC;;AAAC,AAEF,AAAgB,AAChB,gBAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AAC1C,gBAAI,CAAC,MAAM,CAAC,WAAW,GAAG,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,gBAAgB,CAAC;AACvE,gBAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;AAC9B,gBAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjG,gBAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,AAAE,YAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,AAAkB,sBAAC,CAAC;AAC1E,gBAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,AAAE,YAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,AAAgB,oBAAC,CAAC,AAC5E;SAAC,AAEM,AAAY;;;uCACf,AAEE;;;;;;AACF,AAAE,AAAC,gBAAC,qBAAqB,AAAC,EAAC,AAAC;AACxB,oBAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC,aAAG;2BAAI,AAAI,MAAC,YAAY;iBAAE,CAAC,CAAC;AACxE,oBAAI,CAAC,IAAI,EAAE,CAAC,AAChB;aAAC,AACD,AAAI,MAAC,AAAC;AACF,sBAAM,KAAK,CAAC,mDAAmD,CAAC,CAAC;AACjE,qBAAK,CAAC,GAAG,CAAC,gBAAgB,AAAE,AAAmD,sDAAC,CAAC,AACrF;aAAC;AAED,AAAM,mBAAC,IAAI,CAAC,AAChB;SAAC,AAEM,AAAY;;;;AACf,gCAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC1C,gBAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,AAClD;SAAC,AAEO,AAAI;;;;AACR,gBAAI,CAAC,KAAK,EAAE,CAAC;AACb,gBAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAI,CAAC,YAAY,EAAE,CAAC;AACpB,AAAE,AAAC,gBAAC,IAAI,CAAC,MAAM,CAAC,MAAM,AAAC,EAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClD,gBAAI,CAAC,iBAAiB,EAAE,CAAC;AACzB,AAAE,AAAC,gBAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,AAAC,EAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;AACpD,AAAE,AAAC,gBAAC,IAAI,CAAC,MAAM,CAAC,SAAS,AAAC,EAAC,AAAC;AACxB,oBAAI,CAAC,eAAe,EAAE,CAAC;AACvB,oBAAI,CAAC,eAAe,EAAE,CAAC;AACvB,oBAAI,CAAC,eAAe,EAAE,CAAC,AAC3B;aAAC,AACL;SAAC,AAEO,AAAI;;;6BAAC,CAAC,EAAE,CAAC;AACb,AAAM,mBAAC,EAAC,AAAC,EAAC,AAAC,IAAI,CAAC,MAAM,EAAE,AAAG,IAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,AAAC,GAAG,CAAC,CAAC,CAAC,AACjD;SAAC,AAEO,AAAI;;;6BAAC,OAAO;AAChB,AAAM,mBAAC,OAAO,AAAG,IAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,AACrC;SAAC,AAEO,AAAY;;;;AAChB,AAAE,AAAC,gBAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,AAAC,EAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,AAC9C,AAAI,KACA,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC,AACjC;SAAC,AAEO,AAAY;;;;AAChB,gBAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACnB,gBAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACpD,gBAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpD,gBAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACxB,gBAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;AACpH,gBAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;AAC9C,gBAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;AACzC,gBAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACrB,gBAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,AAC1B;SAAC,AAEO,AAAkB;;;;AACtB,gBAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACnB,gBAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACpD,gBAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpD,gBAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACxB,gBAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,AAAG,GAAC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,AAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;AAClJ,gBAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;AAC1B,gBAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACrB,gBAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,AAC1B;SAAC,AAEO,AAAiB;;;;AACrB,gBAAI,SAAyB,aAAC;AAE9B,gBAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACnB,gBAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACpD,gBAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC;AAC1D,gBAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxB,gBAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACxB,gBAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;AAClE,gBAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACxB,qBAAS,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAClG,qBAAS,CAAC,YAAY,CAAC,CAAC,EAAE,0BAA0B,CAAC,CAAC;AACtD,qBAAS,CAAC,YAAY,CAAC,CAAC,EAAE,wBAAwB,CAAC,CAAC;AACpD,gBAAI,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;AAClC,gBAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACnB,gBAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,AAC1B;SAAC,AAEO,AAAe;;;;AACnB,gBAAI,CAAC,GAAW,IAAI,CAAC,SAAS,CAAC,MAAM;gBACjC,CAAS,aAAC;AACd,mBAAO,CAAC,EAAE,EAAE,AAAC;AACT,iBAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACtB,oBAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACxB,oBAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;AACnD,oBAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACxB,oBAAI,CAAC,MAAM,CAAC,SAAS,AAAG,0BAAqB,CAAC,CAAC,KAAK,MAAG,CAAC,AAC5D;aAAC,AACL;SAAC,AAEO,AAAK;;;;AACT,gBAAI,CAAC,MAAM,CAAC,wBAAwB,GAAG,iBAAiB,CAAC;AACzD,gBAAI,CAAC,MAAM,CAAC,SAAS,GAAG,mBAAmB,CAAC;AAC5C,gBAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AAC7C,gBAAI,CAAC,MAAM,CAAC,wBAAwB,GAAG,SAAS,CAAC,AACrD;SAAC,AAEO,AAAkB;;;;AACtB,gBAAI,SAAyB,aAAC;AAE9B,gBAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACnB,gBAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACpD,gBAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC;AAC1D,gBAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC1B,gBAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACxB,gBAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;AAClE,gBAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACxB,qBAAS,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAClG,qBAAS,CAAC,YAAY,CAAC,CAAC,EAAE,yBAAyB,CAAC,CAAC;AACrD,qBAAS,CAAC,YAAY,CAAC,CAAC,EAAE,wBAAwB,CAAC,CAAC;AACpD,gBAAI,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;AAClC,gBAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACnB,gBAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,AAC1B;SAAC,AAEO,AAAe;;;;AACnB,AAAE,AAAC,gBAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,AAAC,EAAC,AAAC;AAC3C,oBAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAChB,qBAAC,EAAE,AAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,AAAC,AAAG,IAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;AAC5J,qBAAC,EAAE,AAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,AAAC,AAAG,IAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;AAC5J,sBAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,AAAC,IAAG,IAAI;AACnC,sBAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,AAAC,IAAG,IAAI;AACnC,0BAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;AAC3B,yBAAK,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG;iBACjC,CAAC,CAAC,AACP;aAAC,AACL;SAAC,AAEO,AAAe;;;;AACnB,gBAAI,CAAC,GAAW,IAAI,CAAC,SAAS,CAAC,MAAM;gBACjC,CAAS,aAAC;AACd,mBAAO,CAAC,EAAE,EAAE,AAAC;AACT,iBAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACtB,iBAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,AAAC,IAAG,GAAG,CAAC;AACvC,iBAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,AAAC,IAAG,GAAG,CAAC;AACvC,iBAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;AACZ,iBAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;AACZ,iBAAC,CAAC,KAAK,IAAI,GAAG,CAAC;AAEf,AAAE,AAAC,oBAAC,CAAC,CAAC,KAAK,GAAG,GAAG,AAAC,EAAC,AAAC;AAChB,wBAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,AAChC;iBAAC,AACL;aAAC,AACL;SAAC,AACL,AAAC;;;;;;;;;;;IChPW,KAAK,AAAM,AAAe,AAC/B;;;;;;;AAGP,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AAC3B,KAAK,CAAC,OAAO,CAAC,aAAa,GAAG,CAAE,UAAU,CAAC,CAAC;AAC5C,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAE5B,IAAI,KAAK,GAAG,CAAC,CAAC;AACd,IAAI,UAAU,aAAC;AACf,IAAI,OAAO,aAAC;AAEZ,gBAAgB,CAAC,WAAW,EAAE,UAAC,GAAG;AAC9B,WAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;;AAAC,AAC3C,AAAyC,AACzC,QAAI,EAAE,GAAG,GAAG;QAAE,EAAE,GAAG,GAAG,CAAC;AACvB,WAAO,CAAC,EAAE,GAAG,YAAY,GAAG,KAAK,CAAC;AAClC,WAAO,CAAC,KAAK,CAAC,GAAG,GAAI,AAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,AAAC,GAAG,IAAI,CAAC;AAC7C,WAAO,CAAC,KAAK,CAAC,IAAI,GAAG,AAAC,GAAG,CAAC,CAAC,GAAI,EAAE,GAAG,CAAC,AAAC,GAAG,IAAI,CAAC;AAE9C,cAAU,GAAG,AAAI,AAAS,gBAnB1B,SAAS,AAAC,AAAM,AAAoC,AAE5D,AAAuB,EAiBa,CAAC;AAC7B,cAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;AAEhE,YAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,AACzD;CAAC,CAAC,CAAC;AAEH,gBAAgB,CAAC,SAAS,EAAE;AACxB,cAAU,CAAC,YAAY,EAAE,CAAC;AAC1B,YAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,AAC/F;CAAC,CAAC,CAAC","file":"melo.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* =========================================================================\n * Bragi (Javascript Logger - Browser)\n *\n * ----------------------------------\n *\n * Distributed under MIT license\n * Author : Erik Hazzard ( http://vasir.net )\n *\n * Provides a LOGGER object which can be used to perform logging\n *      LOGGER.log('group1', 'hello world');\n *\n *      // Also, parasm can be passed in\n *      LOGGER.log('group1', 'message', param1, param2, etc...);\n *      \n *      // And subgroups can be logged\n *      LOGGER.log('group1:subgroup', 'message %j', param1); \n *      \n * To change logger options:\n *      // Shows ALL messages (false to show none)\n *      LOGGER.options.groupsEnabled = true; \n *\n *      // Shows only specific groups\n *      LOGGER.options.groupsEnabled = ['error', 'debug']; // only shows passed in groups \n *\n *      // Can also filter on subgroups\n *      LOGGER.options.groupsEnabled = ['group1:subgroup1']; \n *\n *      // Or regular expressions\n *      LOGGER.options.groupsEnabled = [/^start:to:end$/]\n *\n * To change storing stack traces (gives more info, but adds a nontrivial amount \n *      of time), change the `storeStackTrace` property. It is `false` by default\n *\n *      LOGGER.options.storeStackTrace = true;\n *\n * TRANSPORTS\n *      Logs are output / written to a file / pipped to a server by means\n *      of transports\n *\n * ========================================================================= */\nvar util = require('util');\n\nvar canLog = require('./bragi/canLog');\n\n// Transports is an object which we can add / remove transport objects to\nvar Transports = require('./bragi/transports/Transports');\n\n// transports is an object containing all available transports\nvar transports = require('./bragi/transports');\n\n// TODO: This should probably be in the transports\nvar SYMBOLS = require('./bragi/symbols');\n\n(function(root, factory) {\n    // Setup logger for the environment\n    if(typeof define === 'function' && define.amd) {\n        // RequireJS / AMD\n        define(['exports'], function(exports) {\n            root = factory(root, exports);\n            return root;\n        });\n    } else if (typeof exports !== 'undefined') {\n        // CommonJS\n        factory(root, exports); \n        module.exports = factory();\n    } else {\n        // browser global if neither are supported\n        root.logger = factory(root, {});\n    }\n}(this, function(root, logger) {\n\n    // --------------------------------------\n    //\n    // Setup logger object\n    //\n    // --------------------------------------\n    // Here, we use only a single LOGGER object which is shared among all files\n    // which import Bragi. \n    // NOTE: Why use a single object? What are benefits? Could expose a \"new\"\n    //  logger object\n\n    // NOTE: It might be useful to have multiple loggers?\n    var LOGGER = {\n        util: {},\n\n        // reference to canLog function\n        canLog: canLog\n    };\n\n    // Setup line number / function name logging \n    // --------------------------------------\n    LOGGER.util.__stack = function() {\n        // Utility to get stack information\n        var stack = null;\n        try{\n            var orig = Error.prepareStackTrace;\n            Error.prepareStackTrace = function(_, stack) { return stack; };\n            var err = new Error();\n            Error.captureStackTrace(err, arguments.callee);\n            stack = err.stack;\n            Error.prepareStackTrace = orig;\n        } catch(e){ }\n\n        return stack;\n    };\n\n    // --------------------------------------\n    // Expose styles to users\n    // --------------------------------------\n    // some symbols for the user\n    LOGGER.util.symbols = SYMBOLS; \n\n    // --------------------------------------\n    //\n    // Setup options\n    //\n    // --------------------------------------\n    LOGGER.options = {\n        // default options\n        // Primary configuration options\n        // ----------------------------------\n        // groupsEnabled: specifies what logs to display. Can be either:\n        //      1. an {array} of log levels \n        //          e.g,. ['error', 'myLog1', 'myLog2']\n        //    or\n        //\n        //      2. a {Boolean} : true to see *all* log messages, false to\n        //          see *no* messages\n        //\n        // groupsEnabled acts as a \"whitelist\" for what messages to log\n        groupsEnabled: true,\n\n        // blackList is an array of log level groups which will always be excluded.\n        // Levels specified here take priority over log groups specified in groupsEnabled\n        groupsDisabled: [],\n\n        // Store stack trace? Provides more info, but adds overhead. Very useful\n        // when in development, tradeoffs should be considered when in production\n        storeStackTrace: false\n    };\n\n\n    // Setup default transports\n    // --------------------------------------\n    // transports is the transports array the logger users. \n    LOGGER.transports = new Transports();\n\n    // Default transports\n    // ----------------------------------\n    // NOTE:  see the Console transport for info on the configuration options.\n    // NOTE: Do not \n    var _defaultTransports = [\n        new transports.Console({\n            showMeta: true,\n            showStackTrace: false\n        })\n    ];\n\n    // Other transports include:\n    //      new transports.ConsoleJSON({}) \n    // \n    //      new transports.History({\n    //          storeEverything: false\n    //      })\n    //\n    //      new transports.File({\n    //          filename: '/tmp/test.json'\n    //         })\n\n    for(var i = 0; i < _defaultTransports.length; i++){\n        LOGGER.transports.add( _defaultTransports[i] );\n    }\n\n    // Expose a reference to all available transports\n    // NOTE: This isn't the cleanest way to do this, could use improvement\n    LOGGER.transportClasses = transports;\n\n    // ----------------------------------\n    //\n    // Group Addition / Removal Functions\n    //\n    // ----------------------------------\n    LOGGER.addGroup = function addGroup ( group ){\n        // Add a passed in group (either a {String} or {RegExp}) to the\n        // groupsEnabled array\n\n        // If groupsEnabled is true or false, turn it into an array\n        var groupsEnabled = LOGGER.options.groupsEnabled;\n\n        if(groupsEnabled === true || groupsEnabled === false){\n            LOGGER.options.groupsEnabled = groupsEnabled = [];\n        }\n\n        // Ensure it does not exist\n        var i = 0, len = groupsEnabled.length;\n        for(i = 0; i < len; i++){\n            if(groupsEnabled[i].toString() === group.toString()){\n                return LOGGER;\n            }\n        }\n\n        // Group wasn't found yet, add it\n        groupsEnabled.push( group );\n\n        return LOGGER;\n    };\n\n    LOGGER.removeGroup = function removeGroup ( group ){\n        // Takes in a group and removes all occurences of it from \n        // groupsEnabled\n        \n        // If groupsEnabled is true or false, turn it into an array\n        var groupsEnabled = LOGGER.options.groupsEnabled;\n\n        if(groupsEnabled === true || groupsEnabled === false){\n            LOGGER.options.groupsEnabled = groupsEnabled = [];\n        }\n\n        // Ensure it does not exist\n        var i = 0, len = groupsEnabled.length;\n        var groupsEnabledWithoutGroup = [];\n\n        for(i = 0; i < len; i++){\n            if(groupsEnabled[i].toString() !== group.toString()){\n                groupsEnabledWithoutGroup.push( groupsEnabled[i] );\n            }\n        }\n\n        // update the groupsEnabled\n        LOGGER.options.groupsEnabled = groupsEnabledWithoutGroup;\n\n        return LOGGER;\n    };\n\n    // ----------------------------------\n    //\n    // UTIL functions\n    //\n    // ----------------------------------\n    LOGGER.util.print = function print(message, color){\n        // NOTE: This is a stub function which exists in Bragi, but not in\n        // the browser version. We could print individual colors, but it \n        // requires adding an additional CSS string to console.log(). This is\n        // a TODO\n        return message;\n    };\n\n    // ----------------------------------\n    //\n    // LOG function\n    //\n    // ----------------------------------\n    LOGGER.log = function loggerLog(group, message){\n        // Main logging function. Takes in two (plus n) parameters:\n        //   group: {String} specifies the log level, or log group\n        //\n        //   message: {String} the message to log. The message must be a single\n        //      string, but can have multiple objects inside using `%O`. e.g.,\n        //          logger.log('test', 'some object: %O', {answer: 42});\n        //\n        //   all other parameters are objects or strings that will be formatted\n        //   into the message\n        //\n        var groupsEnabled, groupsDisabled, currentTransport;\n        var transportFuncsToCall = [];\n\n        // Check if this can be logged or not. All transports must be checked as\n        // well, as they can override LOGGER.options.groupsEnabled \n        // ----------------------------------\n        // For each transport, if it can be logged, log it\n        for(var transport in LOGGER.transports._transports){\n            currentTransport = LOGGER.transports._transports[transport];\n\n            // by default, use the groupsEnabled and groupsDisabled specified in \n            // options\n            groupsEnabled = LOGGER.options.groupsEnabled;\n            groupsDisabled = LOGGER.options.groupsDisabled;\n\n            // If transport overrides exist, use them\n            if(currentTransport.groupsEnabled !== undefined){\n                groupsEnabled = currentTransport.groupsEnabled;\n            }\n            if(currentTransport.groupsDisabled !== undefined){\n                groupsDisabled = currentTransport.groupsDisabled;\n            }\n\n            // check if message can be logged\n            if(canLog(group, groupsEnabled, groupsDisabled)){\n                transportFuncsToCall.push( currentTransport );\n            }\n        }\n\n        // can this message be logged? If not, do nothing\n        if(transportFuncsToCall.length < 1){ \n            // Can NOT be logged if there are no transportFuncs to call \n            //\n            // If storeAllHistory is not true, return immediately (if it is\n            // true, the message will get stored just not passed to any\n            // transports)\n            if(!LOGGER.options.storeAllHistory){\n                return false;\n            }\n        }\n\n        // get all arguments\n        // ----------------------------------\n        // remove the group and message from the args array, so the new args array will\n        // just be an array of the passed in arguments\n        var extraArgs = Array.prototype.slice.call(arguments, 2);\n\n        // ----------------------------------\n        // Build up a `loggedObject`, a structured object containing log \n        // information. It can be output to the console, to another file, to\n        // a remote host, etc.\n        // ------------------------------\n        var loggedObject = {};\n\n        // Caller info\n        var caller = null;\n\n        // Only capture caller if storeStackTrace is true.\n        // NOTE: This will not work in strict mode, as we cannot access\n        // the caller's name\n        if(LOGGER.options.storeStackTrace){\n            caller = 'global scope';\n            if(loggerLog.caller && loggerLog.caller.name){\n                caller = loggerLog.caller.name;\n            } else if((loggerLog.caller+'').indexOf('function ()') === 0){\n                caller = 'anonymous function';\n            }\n        }\n\n        // Setup properties on the loggedObject based on passed in properties\n        // ----------------------------------\n        // These are set before any of our library setters to ensure clients do not\n        // override properties set by Bragi\n        // NOTE: All properties set by Bragi are prefixed with an underscore\n        loggedObject.properties = {};\n        loggedObject.originalArgs = [];\n\n        for(var i = 0; i < extraArgs.length; i++){\n            // For each argument, we need to check its type. If it's an object, then\n            // we'll extend the loggedObject `properties` object\n            // (if there are multiple keys, the last\n            // key found takes priority). If it's an array or any other data type,\n            // we'll set a new property called `argumentX` and set the value\n\n            if(!(extraArgs[i] instanceof Array) && typeof extraArgs[i] === 'object'){\n                for(var key in extraArgs[i]){\n                    loggedObject.properties[key] = extraArgs[i][key];\n                }\n            } else {\n                loggedObject.properties['_argument' + i] = extraArgs[i];\n            }\n\n            // add to originalArgs array, so we can know by index what args were\n            // passed in\n            loggedObject.originalArgs.push(extraArgs[i]);\n        }\n\n        // setup meta\n        // ----------------------------------\n        loggedObject.meta = {\n            caller: caller,\n            date: new Date().toJSON()\n        };\n        loggedObject.unixTimestamp = new Date().getTime() / 1000;\n\n        var stack = false;\n        if(LOGGER.options.storeStackTrace){\n            // Store and use stack trace if set. Aides in developing, but adds\n            // some overhead\n            stack = LOGGER.util.__stack();\n            // Currently, getting stack info via this method\n            // is unsupported in many browsers\n            if(stack){\n                var stackLength = stack.length;\n                var trace = [];\n\n                for(i = 1; i < stack.length; i++){\n                    trace.push(stack[i] + '');\n                }\n\n                loggedObject.meta.file = stack[1].getFileName();\n                loggedObject.meta.line = stack[1].getLineNumber();\n                loggedObject.meta.column = stack[1].getColumnNumber();\n                loggedObject.meta.trace = trace;\n            }\n        }\n\n        // Setup group, message, other params\n        // ----------------------------------\n        loggedObject.group = group;\n\n        // Setup the message\n        // ----------------------------------\n        loggedObject.message = message;\n\n        // Send loggedObject to each transport\n        // ----------------------------------\n        // The loggedObject is setup now, call each of the transport log calls that\n        // can be called\n        var len;\n        for(i = 0, len = transportFuncsToCall.length; i < len; i++){\n            transportFuncsToCall[i].log.call( transportFuncsToCall[i], loggedObject );\n        }\n    };\n\n    // Expose this to the window\n    if(!(typeof define === 'function' && define.amd)) {\n        window.BRAGI = LOGGER;\n    }\n    return LOGGER;\n}));\n","/* =========================================================================\n *\n * canLog\n *\n *      Function which takes in a gropu and groupsEnabled and returns a {Boolean}\n *      indicating if message can be logged\n *\n * ========================================================================= */\nfunction canLog(group, groupsEnabled, groupsDisabled){ \n    // Check if a passed in group {string} can be logged based on the passed in\n    // groupsEnabled ({Array} or {Boolean}). \n    // If the message cannot be logged, return false - otherwise, return true\n    //\n    //  NOTE: errors will always be logged unless explictly disabled\n\n    if(groupsEnabled === undefined){\n        groupsEnabled = true;\n    }\n    var i,len;\n\n    // by default, allow logging\n    var canLogIt = true;\n\n    // First, check for allowed groups (whitelist)\n    // ----------------------------------\n    if(groupsEnabled === true){\n        canLogIt = true;\n\n    } else if(groupsEnabled === false || groupsEnabled === null){\n        // Don't ever log if logging is disabled\n        canLogIt = false;\n\n    } else if(groupsEnabled instanceof Array){\n        // if an array of log levels is set, check it\n        canLogIt = false;\n\n        for(i=0, len=groupsEnabled.length; i<len; i++){\n            // the current groupsEnabled will be a string we check group against;\n            // for instance,\n            //      if group is \"group1:group2\", and if the current log level\n            //      is \"group1:group3\", it will NOT match; but, \"group1:group2\" \n            //      would match.\n            //          Likewise, \"group1:group2:group3\" WOULD match\n\n            // If the current item is a regular expression, run the regex\n            if(groupsEnabled[i] instanceof RegExp){\n                if(groupsEnabled[i].test(group)){\n                    canLogIt = true;\n                    break;\n                }\n            } else if(group.indexOf(groupsEnabled[i]) === 0){\n                canLogIt = true;\n                break;\n            }\n        }\n    } \n\n    // set error and warn to be always on unless explictly disabled\n    if(group.indexOf('error') === 0 || group.indexOf('warn') === 0){\n        canLogIt = true;\n    }\n\n    // Second, check disallowed groups (blacklist)\n    if(groupsDisabled && groupsDisabled instanceof Array){\n        for(i=0, len=groupsDisabled.length; i<len; i++){\n            // Same logic as checking groupsEnabled, just the inverse\n            //\n            // If the current item is a regular expression, run the regex\n            if(groupsDisabled[i] instanceof RegExp){\n                if(groupsDisabled[i].test(group)){\n                    canLogIt = false;\n                    break;\n                }\n            } else if(group.indexOf(groupsDisabled[i]) === 0){\n                canLogIt = false;\n                break;\n            }\n        }\n    }\n\n    return canLogIt;\n}\n\nmodule.exports = canLog;\n","/* =========================================================================\n *\n *  symbols\n *      Defines special symbols used by logger\n *\n * ========================================================================= */\nmodule.exports = {\n    success: '✔︎ ',\n    error: '✘ ',\n    warn: '⚑ ',\n    arrow: '➤ ',\n    star: '☆ ',\n    box: '☐ ',\n    boxSuccess: '☑︎ ',\n    boxError: '☒ ',\n    circle: '◯ ',\n    circleFilled: '◉ ',\n    asterisk: '✢',\n    floral: '❧',\n    snowflake: '❄︎',\n    fourDiamond:'❖',\n    spade: '♠︎',\n    club: '♣︎',\n    heart: '♥︎',\n    diamond: '♦︎',\n    queen: '♛',\n    rook: '♜',\n    pawn: '♟',\n    atom: '⚛'\n};\n","/* =========================================================================\n *  transports\n *      Handles all transports\n *\n * ========================================================================= */\nvar files = require('./transports/index');\n\nvar transports = {};\n\nfor(var file in files){ \n    transports[file] = files[file];\n}\n\nmodule.exports = transports;\n","/* =========================================================================\n *\n * Console\n *      Default transport - console\n *\n * ========================================================================= */\nvar SYMBOLS = require('../symbols');\n\n// In < IE10 console is undefined unless the developer tools have at some\n// point been opened in that tab. However, even after console and console.log\n// exist, typeof console.log still evaluate to object, not function, so\n// methods like .apply will cause errors\nif (window.console && window.console.log) {\n    if (typeof window.console.log !== 'function') {\n        window.console.log = function () {};\n    }\n} else {\n    window.console = {};\n    window.console.log = function () {};\n}\n\n// --------------------------------------\n//\n// Setup group Colors to print\n//\n// --------------------------------------\nvar GROUP_COLORS = [\n    // first is BG color, second is foreground color, third is border\n    ['#3182bd', '#ffffff', '#225588'],\n    ['#f38630', '#ffffff'],\n    ['#e0e4cc', '#000000', '#c8cbb6'],\n    ['#8c510a', '#ffffff'],\n    ['#35978f', '#ffffff', \"#13756d\"],\n    ['#c51b7d', '#ffffff'],\n    ['#c6dbef', '#000000'],\n    ['#af8dc3', '#000000'],\n    ['#543005', '#ffffff', \"#321002\"],\n    ['#7fbf7b', '#000000'],\n    ['#dfc27d', '#000000', \"#bda05b\"],\n    ['#f5f5f5', '#000000'],\n    ['#e9a3c9', '#000000'],\n    ['#59323C', '#ffffff'],\n    ['#66c2a5', '#000000'],\n    ['#f6e8c3', '#000000'],\n    ['#606060', '#f0f0f0'],\n    ['#8c510a', '#ffffff'],\n    ['#80cdc1', '#000000'],\n    ['#542788', '#ffffff'],\n    ['#FB8AFE', '#343434'],\n    ['#003c30', '#ffffff'],\n    ['#e6f598', '#000000'],\n    ['#c7eae5', '#000000'],\n    ['#000000', '#f0f0f0'],\n    ['#C3FF0E', '#343434']\n];\nvar OVERFLOW_SYMBOLS = [\n    'asterisk', 'floral', 'snowflake', 'fourDiamond', 'spade', 'club', 'heart',\n    'diamond', 'queen', 'rook', 'pawn', 'atom'\n];\n\nvar BASE_CSS = 'padding: 2px; margin:2px; line-height: 1.8em;';\nvar META_STYLE = BASE_CSS + 'font-size:0.9em; color: #cdcdcd; padding-left:30px;';\n\n// ======================================\n//\n// Console Transport\n//\n// ======================================\nfunction TransportConsole ( options ){\n    options = options || {};\n    // Transport must set groupsEnabled and groupsDisabled to provide transport\n    // level support for overriding what groups to log\n    // (NOTE - the user does not need to pass in groupsEnabled, but the\n    // transport must set these properties)\n    this.groupsEnabled = options.groupsEnabled;\n    this.groupsDisabled = options.groupsDisabled;\n\n    // Display / meta related config options\n    // ----------------------------------\n    // Add a line break after the last thing sent?\n    this.addLineBreak = options.addLineBreak !== undefined ? options.addLineBreak : false;\n\n    // showMeta: {Boolean} Show the meta info (calling func, time, line num, etc)\n    //  `false` by default\n    //  NOTE: This is primarily used only if you want to disable everything.\n    //  If this is true and showStackTrace \n    //  options will be checked. If it is set to false, nothing will be shown\n    this.showMeta = options.showMeta !== undefined ? options.showMeta : false;\n\n    // showStackTrace: {Boolean} provide the full stack trace? Enabled by default,\n    // but will only be shown if meta is shown\n    this.showStackTrace = options.showStackTrace !== undefined ? options.showStackTrace: true;\n\n    // Transport specific settings\n    // ----------------------------------\n    this.showColors = options.showColors === undefined ? true : options.showColor;\n\n    this._foundColors = [];\n    this._colorDict = {\n        error: BASE_CSS + 'background: #ff0000; color: #ffffff; font-style: bold; border: 4px solid #cc0000;',\n        warn: BASE_CSS + 'padding: 2px; background: #ffff00; color: #343434; font-style: bold; border: 4px solid #cccc00;'\n    };\n\n    this.curSymbolIndex = 0;\n\n    return this;\n}\n\nTransportConsole.prototype.getColor = function getColor(group){\n    // Color Formatting\n    // ----------------------------------\n    // Returns the background color for a passed in log group\n    // TODO: if more found colors exist than the original length of the\n    // COLOR array, cycle back and modify the original color\n    //\n    var color = '';\n    var baseColor = '';\n    var curSymbol;\n    var cssString = '';\n\n    // For color, get the first group\n    group = group.split(':')[0];\n\n    // if a color exists for the passed in log group, use it\n    if(this._colorDict[group]){\n        return this._colorDict[group];\n    }\n\n    if(this._foundColors.length >= GROUP_COLORS.length){\n        // is the index too high? loop around if so\n        color = GROUP_COLORS[this._foundColors.length % GROUP_COLORS.length];\n        baseColor = color;\n\n        // add underline if odd\n        // ------------------------------\n        cssString += 'font-style: italic;';\n\n    } else {\n\n        // We haven't yet exhausted all the colors\n        color = GROUP_COLORS[this._foundColors.length];\n    }\n\n    var borderColor = color[2];\n    // If no border color was provided, just bring all values down by 3\n    // and use the result\n    if(!color[2]){\n        borderColor = '#';\n        for(var i = 1; i < color[0].length; i++){\n            borderColor += (\n                (Math.max( 0, (parseInt(color[0][i], 16) - 2) )).toString(16)\n            );\n        }\n    }\n\n\n    cssString += BASE_CSS +\n        \"background: \" + color[0] + \";\" +\n        \"border: 1px solid \" + borderColor + \";\" +\n        \"color: \" + color[1] + \";\";\n\n    // update the stored color info\n    this._foundColors.push(color);\n    this._colorDict[group] = cssString;\n\n    return cssString;\n};\n\n\n// Prototype properties (All these must exist to be a valid transport)\n// --------------------------------------\nTransportConsole.prototype.name = 'Console';\n\nTransportConsole.prototype.log = function transportConsoleLog( loggedObject ){\n    // log\n    //  Logs a passed object to the console\n    //\n    //  params:\n    //      loggedObject: {Object} the log object to log\n    //      options : {Object} the logger options\n    //\n    // Setup message for console output\n    // ------------------------------\n    //  The final message will look like: \n    //      [ group ]      message \n    //      meta info (function caller, time, file info)\n    //\n    var consoleMessage = \"\";\n    if(this.showColors){\n        consoleMessage += \"%c\";\n    }\n\n    var i;\n\n    // Setup final log message format, depending on if it's a browser or not\n    // ------------------------------\n    consoleMessage +=\n        \"[ \" +\n            loggedObject.group + ' ' +\n        \" ] \\t\";\n\n    // NOTE: Use the full styledMessage property\n    consoleMessage += loggedObject.message + ' \\t';\n\n    // add line break to console messages if set\n    if(this.addLineBreak){\n        consoleMessage += '\\n';\n    }\n\n    // Setup final log array to call console.log with\n    var toLogArray = [];\n    toLogArray.push(consoleMessage);\n\n    if(this.showColors){\n        toLogArray.push(this.getColor(loggedObject.group));\n    }\n    toLogArray = toLogArray.concat(loggedObject.originalArgs);\n\n    // Log it\n    // ------------------------------\n    console.log.apply( console, toLogArray );\n\n    // ----------------------------------\n    // Log meta info?\n    // ----------------------------------\n    var metaConsoleMessage = '';\n    var metaLogArray = [];\n\n    if(this.showMeta){\n        // push style for meta if there is meta\n        if(this.showColors){\n            metaConsoleMessage += '%c';\n        }\n\n        // JSON timestamp\n        metaConsoleMessage += new Date().toJSON() + ' \\t \\t ';\n\n        // Show the name of the calling function\n        if(loggedObject.meta.caller){\n            metaConsoleMessage += 'caller: ' + loggedObject.meta.caller + ' \\t \\t ';\n        }\n\n        // For node, log line number and filename\n        if(loggedObject.meta.file && loggedObject.meta.line ){\n            metaConsoleMessage += loggedObject.meta.file +\n                ':' + loggedObject.meta.line +\n                ':' + loggedObject.meta.column +\n                '';\n        }\n    }\n\n    if(this.showMeta && this.showStackTrace && loggedObject.meta.trace){\n        // Show full stack trace if set\n        // --------------------------\n        metaConsoleMessage += '\\n' +\n            '(Stack Trace)' +\n            '\\n';\n\n        // Skip the first item in the stack (this function)\n        for(i = 0; i < loggedObject.meta.trace.length; i++){\n            metaConsoleMessage += '\\t' +\n                loggedObject.meta.trace[i] + '\\n';\n        }\n    }\n\n    // push style for meta if there is meta\n    if(this.showMeta && this.showColors){\n        metaLogArray.push(metaConsoleMessage);\n        metaLogArray.push(META_STYLE);\n    }\n\n    if(metaLogArray.length > 0){\n        console.log.apply(console, metaLogArray);\n    }\n\n    return this;\n};\n\nmodule.exports = TransportConsole;\n","/* =========================================================================\n *\n * History\n *      Logs to console, but just outputs raw JSON\n *\n * ========================================================================= */\nfunction TransportHistory ( options ){\n    options = options || {};\n\n    this.groupsEnabled = options.groupsEnabled;\n    this.groupsDisabled = options.groupsDisabled;\n\n    // Store *everything*?\n    this.storeEverything = false;\n    if(options.storeEverything === true){\n        this.storeEverything = true;\n\n        // Also, log *everything*\n        this.groupsEnabled = true;\n    }\n\n    // Set history size per log group\n    //  NOTE: if historySize is 0 or false, it has no limit\n    this.historySize = options.historySize !== undefined ? options.historySize : 200;\n\n    // History object\n    this.history = {};\n\n    return this;\n}\n\n// Prototype properties (All these must exist to be a valid transport)\n// --------------------------------------\nTransportHistory.prototype.name = 'History';\n\nTransportHistory.prototype.log = function transportHistoryLog( loggedObject ){\n    // log\n    //  Logs a passed object to the console\n    //\n    //  params:\n    //      loggedObject: {Object} the log object to log\n    //      options : {Object} the logger options\n    //\n    // Setup message for console output\n    // ------------------------------\n    // store the key by the first root group\n    var group = loggedObject.group.split(':')[0];\n\n    // Keep track of message\n    if(this.history[group] === undefined){\n        this.history[group] = [];\n    }\n\n    // store the key by the first root group\n    this.history[group].push(loggedObject);\n\n    // Trim history\n    if(this.historySize > 0 && \n       this.history[group].length > this.historySize\n    ){\n        this.history[group].shift();\n    }\n\n    return this;\n};\n\nmodule.exports = TransportHistory;\n","/* =========================================================================\n *\n * Transports\n *      Transports is an object which contains transports the logger uses\n *      to output logs\n *\n * ========================================================================= */\nfunction Transports (){\n    // This function is used by Bragi to keep track of what the currently\n    // enabled transports to be used are\n    \n    this._transports = {};\n\n    // Contains a count of # of transports by type\n    this._transportCount = {};\n    \n    return this;\n}\n\n// ======================================\n//\n// access\n//\n// ======================================\nTransports.prototype.get = function get( transportName ){\n    // Returns a transport object that matches the passed in name\n    var returnedTransportObjects = new Array();\n\n    for(var key in this._transports){\n        // If the name is part of of the key, remove it\n        if(key.toLowerCase().indexOf(transportName.toLowerCase()) > -1){\n            returnedTransportObjects.push(this._transports[key]);\n        }\n    }\n\n    returnedTransportObjects.property = function transportProperty( keyOrObject, value ){\n        // Allow `.property()` to be called, which will return an array of \n        // values if just the `keyOrObject` is passed in. If `value` is also passed in \n        // as a string, it will set all returned transports's key to that value\n        //\n        // An object containing property keys and values can also be passed in\n        // as the first and only argument to set multiple properties at once\n        //\n        // example calls: .property( 'showMeta', true );\n        //                .property( {showMeta: true} );\n\n        var i = 0;\n        var len = this.length;\n\n        if(typeof keyOrObject === 'string' && value === undefined){\n            // Getter called. called like `.property('showMeta');`\n            var vals = [];\n            for(i=0; i<len; i++){ \n                vals.push(this[i][keyOrObject]);\n            }\n            return vals;\n\n        } \n        else if( typeof keyOrObject === 'string' && value !== undefined ){\n            // Setter called. called like `.property('showMeta', true);`\n            for(i=0; i<len; i++){ \n                this[i][keyOrObject] = value;\n            }\n        }\n        else if( typeof keyOrObject === 'object' ){\n            // Object passed in like `.property( {showMeta: true} )`\n            for(i=0; i<len; i++){ \n                for( var keyName in keyOrObject ){\n                    this[i][keyName] = keyOrObject[keyName];\n                }\n            }\n        }\n\n        return this;\n    };\n\n    return returnedTransportObjects;\n};\n\n// ======================================\n//\n// Add / Remove\n//\n// ======================================\nTransports.prototype.add = function add( transport ){\n    // Takes in a transport object and adds it to the transport object.\n    //  If a transport object already exists (e.g., if there are two \"File\"\n    //  transports already), the transport name will be transport.name + number\n\n    if(this._transportCount[transport.name] === undefined){\n        // Transport does not yet exist\n        this._transportCount[transport.name] = 1;\n        this._transports[transport.name] = transport;\n    } else {\n        // Transport already exists\n        this._transportCount[transport.name] += 1;\n        this._transports[transport.name + '' + (this._transportCount[transport.name] - 1)] = transport;\n    }\n\n    return this;\n};\n\nTransports.prototype.remove = function remove( transportName, index ){\n    // Takes in the name of a transport (e.g., Console) and an optional index.\n    // If no index is passed in, all transports that match the name will be \n    // removed. If an index is passed in, only the index will be removed. e.g.,\n    // if there are two `File` transports, passed in index `1` will remove the\n    // second file transport\n\n    transportName = transportName;\n    // if a transport object was passed in, remove the transport by name\n    if(transportName.name){ transportName = transportName.name; }\n\n    for(var key in this._transports){\n        if(index !== undefined){\n            if((transportName + '' + index) === key){\n                delete this._transports[key];\n            }\n        } else {\n            // If the name is part of of the key, remove it\n            if(key.indexOf(transportName) > -1){\n                delete this._transports[key];\n            }\n        }\n    }\n\n    return this;\n};\n\nTransports.prototype.empty = function empty (){\n    // Removes all transports\n    for(var key in this._transports){\n        delete this._transports[key];\n    }\n\n    return this;\n};\n\nmodule.exports = Transports;\n","/* =========================================================================\n *\n * index.js\n *      Exports all available transports\n *\n * ========================================================================= */\nmodule.exports.Console = require('./Console');\nmodule.exports.History = require('./History');\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","/// <reference path=\"../../../../../typings/bragi-browser/bragi-browser\" />\r\n\r\nimport * as Bragi from \"bragi-browser\";\r\nimport {Dispositive, Dispositives} from \"./dispositive\";\r\n\r\nexport class DesktopCn extends Dispositive implements Dispositives {\r\n\r\n    container: HTMLElement;\r\n    element: HTMLElement;\r\n    y: number;\r\n    x: number;\r\n    borderBottomTolerance: number;\r\n    borderRightTolerence: number;\r\n    returns: number;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public start(container: HTMLElement, element: HTMLElement | any, eve: any) {\r\n        // start the controller graphics\r\n        this.setGraphics(element);\r\n        this.initGraphics();\r\n\r\n        this.element = element || this.error(\"error:DesktopCn\", \"the element is needed!\");\r\n        // set events\r\n        this.element.onmouseup = eve => this.onMouseup(eve);\r\n        document.onmousemove = eve => this.onMousemove(eve);\r\n        // set impact sector.\r\n        this.y = eve.y;\r\n        this.x = eve.x;\r\n\r\n        this.borderBottomTolerance = 220;\r\n        this.borderRightTolerence = 220;\r\n\r\n        this.returns = 50;\r\n        this.container = container;\r\n    }\r\n\r\n    /* EVENTS */\r\n    public onMouseup(eve) {\r\n        document.onmousemove = null;\r\n    }\r\n\r\n    public onMousemove(eve) {\r\n        // when the mouse is in movement.\r\n        this.controls(this.element, eve);\r\n        this.movement(this.element, eve);\r\n        this.y = eve.y;\r\n        this.x = eve.x;\r\n    }\r\n\r\n    /* ACTIONS */\r\n    protected movement(element: HTMLElement, eve) {\r\n        /* \r\n        set actions when the circle is in motion.\r\n        */\r\n        let actualY: number = (eve.y - this.y) + this.element.offsetTop;\r\n        let actualX: number = (eve.x - this.x) + this.element.offsetLeft;\r\n\r\n        element.style.top = actualY + \"px\";\r\n        element.style.left = actualX + \"px\";\r\n    }\r\n\r\n    private controls(element: HTMLElement, eve: Event) {\r\n        let eY = element.offsetTop,\r\n            eX = element.offsetLeft;\r\n    }\r\n}","/// <reference path=\"../../../../../typings/bragi-browser/bragi-browser\" />\r\nimport * as Bragi from \"bragi-browser\";\r\nimport {Graphics} from \"./graphs\";\r\n\r\nexport abstract class Dispositives {\r\n\r\n}\r\n\r\nexport class Dispositive extends Graphics {\r\n    graphics: Graphics;\r\n    constructor() {\r\n        super();\r\n    }\r\n    error(group, message) {\r\n        Bragi.log(group, message);\r\n        throw Error(message);\r\n    }\r\n}","/// <reference path=\"../../../../../typings/bragi-browser/bragi-browser\" />\r\nimport * as Bragi from \"bragi-browser\";\r\n\r\ninterface Circle {\r\n    x?: number;\r\n    y?: number;\r\n    vx?: number;\r\n    vy?: number;\r\n    radius?: number;\r\n    speed?: number;\r\n    alpha?: number;\r\n    rotation?: number;\r\n    angleStart?: number;\r\n    angleEnd?: number;\r\n    hue?: number;\r\n    thickness?: number;\r\n    blur?: number;\r\n    particles?: boolean;\r\n    border?: boolean;\r\n    flareTwo?: boolean;\r\n}\r\n\r\nexport class Graphics {\r\n\r\n    private render: CanvasRenderingContext2D;\r\n    private circleInterval: number;\r\n    private gradient1: CanvasGradient;\r\n    private particleMax: number;\r\n    private particles: Object[];\r\n\r\n    cw: number;\r\n    ch: number;\r\n    circle: {\r\n        x: number,\r\n        y: number,\r\n        radius: number,\r\n        speed: number,\r\n        alpha?: number,\r\n        rotation: number,\r\n        angleStart: number,\r\n        angleEnd: number,\r\n        hue: number,\r\n        thickness: number,\r\n        blur: number,\r\n        particles: boolean,\r\n        border: boolean,\r\n        flareTwo: boolean\r\n    };\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public setGraphics(element: HTMLCanvasElement, circleSet: Circle = {}): void {\r\n        /* \r\n        set initial props of the circles controller.\r\n        */\r\n        this.render = element.getContext(\"2d\");\r\n        this.cw = element.width = 230;\r\n        this.ch = element.height = 230;\r\n        this.circle = {\r\n            x: circleSet.x || (this.cw / 2),\r\n            y: circleSet.y || (this.ch / 2),\r\n            radius: circleSet.radius || 90,\r\n            speed: circleSet.speed || 13,\r\n            rotation: circleSet.rotation || 0,\r\n            angleStart: circleSet.angleStart || 270,\r\n            angleEnd: circleSet.angleEnd || 90,\r\n            hue: circleSet.hue || 450,\r\n            thickness: circleSet.thickness || 35,\r\n            blur: circleSet.blur || 1,\r\n            particles: circleSet.particles || false,\r\n            border: circleSet.border || false,\r\n            flareTwo: circleSet.flareTwo || false\r\n        };\r\n\r\n        // aspect props.\r\n        this.render.shadowBlur = this.circle.blur;\r\n        this.render.shadowColor = \"hsla(\" + this.circle.hue + \", 80%, 60%, 1)\";\r\n        this.render.lineCap = \"round\";\r\n        this.gradient1 = this.render.createLinearGradient(0, -this.circle.radius, 0, this.circle.radius);\r\n        this.gradient1.addColorStop(0, `hsla(${this.circle.hue}, 60%, 50%, .25)`);\r\n        this.gradient1.addColorStop(1, `hsla(${this.circle.hue}, 60%, 50%, 0)`);\r\n    }\r\n\r\n    public initGraphics(): Graphics {\r\n        /*\r\n        this function start the circular animation loop \r\n        */\r\n        if (requestAnimationFrame) {\r\n            this.circleInterval = requestAnimationFrame(eve => this.initGraphics());\r\n            this.loop();\r\n        }\r\n        else {\r\n            throw Error(\"Native function requestAnimationFrame is required\");\r\n            Bragi.log(\"error:Graphics\", `Native function requestAnimationFrame is required`);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public stopGraphics() {\r\n        cancelAnimationFrame(this.circleInterval);\r\n        this.render.clearRect(0, 0, this.cw, this.ch);\r\n    }\r\n\r\n    private loop(): void {\r\n        this.clear();\r\n        this.updateCircle();\r\n        this.renderCircle();\r\n        if (this.circle.border) this.renderCircleBorder();\r\n        this.renderCircleFlare();\r\n        if (this.circle.flareTwo) this.renderCircleFlare2();\r\n        if (this.circle.particles) {\r\n            this.createParticles();\r\n            this.updateParticles();\r\n            this.renderParticles();\r\n        }\r\n    }\r\n\r\n    private rand(a, b) {\r\n        return ~~((Math.random() * (b - a + 1)) + a);\r\n    }\r\n\r\n    private dToR(degrees) {\r\n        return degrees * (Math.PI / 180);\r\n    }\r\n\r\n    private updateCircle() {\r\n        if (this.circle.rotation < 360)\r\n            this.circle.rotation += this.circle.speed;\r\n        else\r\n            this.circle.rotation = 0;\r\n    }\r\n\r\n    private renderCircle() {\r\n        this.render.save();\r\n        this.render.translate(this.circle.x, this.circle.y);\r\n        this.render.rotate(this.dToR(this.circle.rotation));\r\n        this.render.beginPath();\r\n        this.render.arc(0, 0, this.circle.radius, this.dToR(this.circle.angleStart), this.dToR(this.circle.angleEnd), true);\r\n        this.render.lineWidth = this.circle.thickness;\r\n        this.render.strokeStyle = this.gradient1;\r\n        this.render.stroke();\r\n        this.render.restore();\r\n    }\r\n\r\n    private renderCircleBorder() {\r\n        this.render.save();\r\n        this.render.translate(this.circle.x, this.circle.y);\r\n        this.render.rotate(this.dToR(this.circle.rotation));\r\n        this.render.beginPath();\r\n        this.render.arc(0, 0, this.circle.radius + (this.circle.thickness / 2), this.dToR(this.circle.angleStart), this.dToR(this.circle.angleEnd), true);\r\n        this.render.lineWidth = 2;\r\n        this.render.stroke();\r\n        this.render.restore();\r\n    }\r\n\r\n    private renderCircleFlare() {\r\n        let gradient3: CanvasGradient;\r\n\r\n        this.render.save();\r\n        this.render.translate(this.circle.x, this.circle.y);\r\n        this.render.rotate(this.dToR(this.circle.rotation + 185));\r\n        this.render.scale(1, 1);\r\n        this.render.beginPath();\r\n        this.render.arc(0, this.circle.radius, 30, 0, Math.PI * 2, false);\r\n        this.render.closePath();\r\n        gradient3 = this.render.createRadialGradient(0, this.circle.radius, 0, 0, this.circle.radius, 30);\r\n        gradient3.addColorStop(0, \"hsla(330, 50%, 50%, .35)\");\r\n        gradient3.addColorStop(1, \"hsla(330, 50%, 50%, 0)\");\r\n        this.render.fillStyle = gradient3;\r\n        this.render.fill();\r\n        this.render.restore();\r\n    }\r\n\r\n    private renderParticles() {\r\n        let i: number = this.particles.length,\r\n            p: Circle;\r\n        while (i--) {\r\n            p = this.particles[i];\r\n            this.render.beginPath();\r\n            this.render.fillRect(p.x, p.y, p.radius, p.radius);\r\n            this.render.closePath();\r\n            this.render.fillStyle = `hsla(0, 0%, 100%, ${p.alpha})`;\r\n        }\r\n    }\r\n\r\n    private clear() {\r\n        this.render.globalCompositeOperation = \"destination-out\";\r\n        this.render.fillStyle = \"rgba(0, 0, 0, .1)\";\r\n        this.render.fillRect(0, 0, this.cw, this.ch);\r\n        this.render.globalCompositeOperation = \"lighter\";\r\n    }\r\n\r\n    private renderCircleFlare2() {\r\n        let gradient4: CanvasGradient;\r\n\r\n        this.render.save();\r\n        this.render.translate(this.circle.x, this.circle.y);\r\n        this.render.rotate(this.dToR(this.circle.rotation + 165));\r\n        this.render.scale(1.5, 1);\r\n        this.render.beginPath();\r\n        this.render.arc(0, this.circle.radius, 25, 0, Math.PI * 2, false);\r\n        this.render.closePath();\r\n        gradient4 = this.render.createRadialGradient(0, this.circle.radius, 0, 0, this.circle.radius, 25);\r\n        gradient4.addColorStop(0, \"hsla(30, 100%, 50%, .2)\");\r\n        gradient4.addColorStop(1, \"hsla(30, 100%, 50%, 0)\");\r\n        this.render.fillStyle = gradient4;\r\n        this.render.fill();\r\n        this.render.restore();\r\n    }\r\n\r\n    private createParticles() {\r\n        if (this.particles.length < this.particleMax) {\r\n            this.particles.push({\r\n                x: (this.circle.x + this.circle.radius * Math.cos(this.dToR(this.circle.rotation - 85))) + (this.rand(0, this.circle.thickness * 2) - this.circle.thickness),\r\n                y: (this.circle.y + this.circle.radius * Math.sin(this.dToR(this.circle.rotation - 85))) + (this.rand(0, this.circle.thickness * 2) - this.circle.thickness),\r\n                vx: (this.rand(0, 100) - 50) / 1000,\r\n                vy: (this.rand(0, 100) - 50) / 1000,\r\n                radius: this.rand(1, 6) / 2,\r\n                alpha: this.rand(10, 20) / 100\r\n            });\r\n        }\r\n    }\r\n\r\n    private updateParticles() {\r\n        let i: number = this.particles.length,\r\n            p: Circle;\r\n        while (i--) {\r\n            p = this.particles[i];\r\n            p.vx += (this.rand(0, 100) - 50) / 750;\r\n            p.vy += (this.rand(0, 100) - 50) / 750;\r\n            p.x += p.vx;\r\n            p.y += p.vy;\r\n            p.alpha -= .01;\r\n\r\n            if (p.alpha < .02) {\r\n                this.particles.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"../../typings/bragi-browser/bragi-browser\" />\r\nimport * as Bragi from \"bragi-browser\";\r\nimport {DesktopCn} from \"./core/melo/dispositive/despktopCn\";\r\n\r\n// configure the logger\r\nBragi.addGroup(\"Graphics\");\r\nBragi.options.groupsEnabled = [ \"Graphics\"];\r\nconsole.log('controller start');\r\n\r\n    let count = 0;\r\n    let controller;\r\n    let element;\r\n\r\n    addEventListener(\"mousedown\", (eve) => {\r\n        element = document.createElement(\"canvas\");\r\n        // set props of canvas element controller\r\n        let ch = 230, cx = 230;\r\n        element.id = \"controller\" + count;\r\n        element.style.top =  (eve.y - ch / 2) + \"px\";\r\n        element.style.left = (eve.x  - cx / 2) + \"px\";\r\n\r\n        controller = new DesktopCn();\r\n        controller.start(document.getElementById(\"main\"), element, eve);\r\n        \r\n        document.getElementById(\"main\").appendChild(element);\r\n    });\r\n\r\n    addEventListener(\"mouseup\", () => {\r\n        controller.stopGraphics();\r\n        document.getElementById(\"main\").removeChild(document.getElementById(\"controller\" + count));\r\n    });"]}